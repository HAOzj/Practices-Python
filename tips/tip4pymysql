## 基本语法 
import pymysql
config = {  
    "host": str,  
    "port": int,  
    "user": str,  
    "password": str,  
    "db": str, # 可省略  
    "charset": str,  
    "cursorclass": str # 可省略  
}

db = pymysql.connect(**config)
cursor = db.cursor()

cursor.execute(sentence, *param) # commit或者rollback之前会锁表,会return 受影响的记录数
cursor.executemany(sentence, params)

db.commit() # 如果是事务性数据库,每次命令必须commit; engine=InnoDB就是事务性数据库
db.rollback() # 回撤操作,建表操作不能回撤
records = cursor.fetchall() # 默认cursor返回[tuple]
record = cursor.fetchone() # 返回一条数据,不节省内存

cursor.close()
db.close()

## cursor类型  
### SScursor  
流式游标,当数据量过大或者连接缓慢时使用,并不节省内存,缺点是和commit不兼容,不可用于insert和update操作

with self.db.cursor(pymysql.cursors.SSCursor) as cursor:
    cursor.execute(sql)
    self.db.commit() # 一定要去掉,否则返回为空; 普通cursor和DictCursor不需要
    records = cursor.fetchall()
    
### DictCursor  
字典游标,返回[dict]

### SSDictCursor
流式字典游标
